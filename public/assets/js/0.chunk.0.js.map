{"version":3,"sources":["sources://./node_modules/core-js/modules/es6.array.find-index.js","sources://./node_modules/core-js/modules/es6.string.starts-with.js","sources://./node_modules/core-js/modules/es7.object.entries.js","sources://./packages/pyradic/platform/lib/utils/tree-node.ts"],"names":[],"mappings":"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","file":"js/0.chunk.0.js","sourcesContent":["'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import { Collection } from '../classes/Collection';\nimport { Constructor } from '@/decorators';\n\nexport interface INode {\n    setCollectionClass(collectionClass:any): this\n\n    setIndex(index: number): this\n\n    hasChild(child: INode): boolean\n\n    addChild(child: INode): this\n\n    removeChild(child: INode): this\n\n    removeAllChildren(): this\n\n    getChildren(): INode[]\n\n    getAllDescendants(): INode[]\n\n    setChildren(children: INode[]): this\n\n    removeParentFromChildren(): this\n\n    setParent(parent?: INode): this\n\n    getParent(): INode\n\n    getAncestors(): INode[]\n\n    getAncestorsAndSelf(): INode[]\n\n    getNeighbors(): INode[]\n\n    getNeighborsAndSelf(): INode[]\n\n    isLeaf(): boolean\n\n    isRoot(): boolean\n\n    isChild(): boolean\n\n    root(): INode\n\n    getDepth(): number\n\n    getHeight(): number\n\n    getSize(): number\n\n    isFirst(): boolean\n\n    isLast(): boolean\n\n    hasAncestor(): boolean;\n\n    hasChildren(): boolean;\n\n    hasMatchingParentType(): boolean\n\n    hasParent(): boolean;\n\n    hasSiblings(): boolean;\n\n    hasPrevious(): boolean;\n\n    hasNext(): boolean;\n\n    getNext(): INode | undefined\n\n    getPrevious(): INode | undefined\n\n    getIndex(): number\n}\n\nexport interface Visitor {\n    enter?(node: INode): any\n\n    leave(node: INode): any\n\n}\n\nexport class NodeWalker {\n    walk(node: INode, visitor: Visitor) {\n        if ( typeof visitor.enter === 'function' ) {\n            visitor.enter(node);\n        }\n        node.getChildren().forEach(childNode => this.walk(childNode, visitor));\n        if ( typeof visitor.leave === 'function' ) {\n            visitor.leave(node);\n        }\n    }\n}\n\n\nexport class NodeArray<T extends INode = INode> extends Collection<T> {\n\n    item(key: number): T { return this[ key ] }\n\n    hasItem(key: number): boolean { return this[ key ] !== undefined}\n\n    depth(depth: number) {return this.filter(item => item.getDepth() === depth)}\n\n    root() {return this.filter(item => item.isRoot)}\n\n    without(item: any[]) {return this.filter(i => ! item.includes(i)) }\n\n    only(item: any[]) {return this.filter(i => item.includes(i)) }\n\n}\n\n\nexport abstract class BaseNode<C extends NodeArray<INode> = NodeArray<INode>> implements INode {\n    protected children: INode[]                              = [];\n    protected parent?: INode;\n    protected collectionClass:any = NodeArray as any\n    protected _index?: number\n\n    public setIndex(index: number) {\n        this._index = index\n        return this;\n    }\n\n    public setCollectionClass(collectionClass) {\n        this.collectionClass = collectionClass;\n        return this;\n    }\n\n    public newCollection(items: INode[] = []): C {\n        return new (this.collectionClass)(...items as any) as any;\n    }\n\n    public hasChild(child: INode) {\n        return this.children.filter(c => c === child).length > 0\n    }\n\n    public addChild(child: INode): this {\n        if ( this.hasChild(child) ) {\n            return this;\n        }\n        child.setIndex(this.children.push(child))\n        child.setParent(this);\n        return this;\n    }\n\n    public setParent(parent?: INode): this {\n        if ( this.parent === parent ) {\n            return this;\n        }\n        if ( this.hasParent() && this.getParent().hasChild(this) ) {\n            this.getParent().removeChild(this);\n        }\n        this.parent = parent;\n        if ( parent ) {\n            parent.addChild(this);\n        }\n        return this;\n    }\n\n    public removeChild(childToRemove: INode): this {\n        Object.entries(this.children).forEach(([ key, child ]) => {\n            if ( child == childToRemove ) {\n                delete this.children[ key ];\n            }\n        });\n        let index = this.children.findIndex(node => node === childToRemove);\n        if(index){\n            this.children.splice(index)\n        }\n        // this.children = Array.from(this.children.values());\n        childToRemove.setParent();\n        return this;\n    }\n\n    public getAllDescendants(): C {\n        let descendants = [];\n        for ( let child of this.getChildren() ) {\n            descendants.push(child);\n            descendants.push(...child.getAllDescendants());\n        }\n        return this.newCollection(descendants);\n    }\n\n    public removeAllChildren(): this {\n        this.children = [];\n        return this;\n    }\n\n    public root(): INode {\n        let parent;\n        let node = this;\n        while ( parent = node.getParent() ) {\n            node = parent;\n        }\n        return node;\n    }\n\n    public getAncestors(): C {\n        let parents = [];\n        let parent;\n        let node    = this;\n        while ( parent = node.getParent() ) {\n            parents.unshift(parent);\n            node = parent;\n        }\n        return this.newCollection(parents);\n    }\n\n    public getDepth(): number {\n        if ( this.isRoot() ) {\n            return 0;\n        }\n        return this.getParent().getDepth() + 1;\n    }\n\n    public getSize(): number {\n        let size = 1;\n        for ( let child of this.children ) {\n            size += child.getSize();\n        }\n        return size;\n    }\n\n    public removeParentFromChildren(): this {\n        for ( const child of this.children ) {\n            child.setParent(null);\n        }\n        return this;\n    }\n\n    public setChildren(children: INode[]): this {\n        this.removeParentFromChildren();\n        this.children = [];\n        for ( const child of children ) {\n            this.addChild(child);\n        }\n        return undefined;\n    }\n\n    public isChild(): boolean { return this.getParent() !== undefined; }\n\n    public isLeaf(): boolean { return this.children.length === 0; }\n\n    public isRoot(matchType: boolean = false): boolean {\n        if ( ! matchType ) {\n            return this.getParent() === undefined;\n        }\n        if ( this.hasMatchingParentType() ) {\n            return false;\n        }\n        return true;\n    }\n\n    public hasMatchingParentType() {\n        if ( this.getParent() !== undefined ) {\n            if ( this.getParent() instanceof this.constructor || this.getParent().constructor.name === this.constructor.name ) {\n                return true\n            }\n        }\n        return false\n    }\n\n    public hasParent(): boolean { return this.parent !== undefined}\n\n    public hasChildren() { return Array.isArray(this.children) && this.children.length > 0; }\n\n    public getAncestorsAndSelf(): C { return this.getAncestors().concat([ this as any ]) as any; }\n\n    public getChildren(): C { return this.newCollection(this.children as any); }\n\n    public getHeight(): number { return this.getAncestors().length; }\n\n    public getLevel(): number { return this.getAncestors().length; }\n\n    public getNeighbors(): C { return this.getParent().getChildren().without([ this ]); }\n\n    public getNeighborsAndSelf(): C { return this.getParent().getChildren(); }\n\n    public getParent(): this { return this.parent as any; }\n\n    public isFirst(): boolean { return this.hasPrevious() === false}\n\n    public isLast(): boolean { return this.hasNext() === false}\n\n    public hasAncestor(): boolean { return this.hasParent() && this.getParent().hasParent()}\n\n    public hasSiblings(): boolean { return this.hasParent() && this.getParent().getChildren().without([ this ]).isNotEmpty()}\n\n    public hasPrevious(): boolean { return this.getNeighborsAndSelf().hasItem(this.getIndex() - 1) }\n\n    public hasNext(): boolean { return this.getNeighborsAndSelf().hasItem(this.getIndex() + 1)}\n\n    public getNext(): INode | undefined { return this.getNeighborsAndSelf().item(this.getIndex() + 1)}\n\n    public getPrevious(): INode | undefined { return this.getNeighborsAndSelf().item(this.getIndex() - 1)}\n\n    public getIndex(): number {\n        if ( this._index !== undefined ) {\n            return this._index;\n        }\n        if ( this.hasParent() ) {\n            this.getNeighborsAndSelf().findIndex(node => node === this)\n        }\n        return 0;\n    }\n\n    protected _getObjectExcludeKeys(): string[] {\n        return [ 'getChildren', 'getAncestors', 'getAncestorsAndSelf', 'getNeighbors', 'getNeighborsAndSelf', 'getParent', 'getNext', 'getPrevious', 'root', 'getAllDescendants' ]\n    }\n\n    public toObject() {\n        let object: any = {}\n        Object\n            .keys(this)\n            .filter(key => this._getObjectExcludeKeys().includes(key) === false)\n            .filter(key => key.startsWith('remove') === false)\n            .filter(key => key.startsWith('add') === false)\n            .filter(key => typeof this[ key ] === 'function')\n            .forEach(key => {\n                try {\n                    object[ key ] = this[ key ]()\n                } catch ( e ) {\n\n                }\n            })\n        return object;\n    }\n\n}\n\nexport class Node<C extends NodeArray = NodeArray> extends BaseNode<C> implements INode {\n    constructor(protected _root: INode) {\n        super()\n        this.setParent(_root);\n    }\n\n    public root(): INode {\n        return this._root;\n    }\n}\n\n\nexport class RootNode<C extends NodeArray<INode> = NodeArray<INode>> extends BaseNode<C> implements INode {\n    nodeClass:any            = Node\n    collectionClass: any = NodeArray as any\n\n    createNode() {\n        const node = new this.nodeClass(this);\n        node.setCollectionClass(this.collectionClass);\n        return node;\n    }\n}\n\nexport class ValuedNode<T extends any = any> extends BaseNode {\n    constructor(protected value: T) {\n        super();\n    }\n\n    public setValue(value: T): this {\n        this.value = value;\n        return this;\n    }\n\n    public getValue(): T {\n        return this.value;\n    }\n}\n"],"sourceRoot":""}